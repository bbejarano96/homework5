Bryan BejaranoHomework#5Part 2:1.When you enter data, the browser, the web server, check to see that the data is the correct format and within the constraints set by the application.2.Build-in form validation. JavaScript validation.3.HTML5 form controls to validate most user date without JavaScript. the date needs to be a number, an email address, or some other specific presets4.<form action="submit.html" id="userForm">          <input            type="text"            name="username"            placeholder="Enter Username"            pattern="[A-Za-z0-9_]{1,15}"            title="Only letters (either case), numbers, and the underscore. No more than 15 characters."            required          />          <input            type="email"            name="mail"            placeholder="Enter Email"            pattern="(\b[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}\b)"            title="Your email must contain a @ and a valid.ext"            required          />          <input            type="password"            name="password"            placeholder="Enter Password"            pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])\w{13,24}$"            title="Your password must contain at least one number, one lowercase and one uppercase letter and must be least 13 characters long, but no more than 24 characters long, containing letters, numbers or the underscore."            required          />          <button type="submit" form="userForm" id="btn">Submit</button>          <button id="btnReset">Reset</button>        </form>5.Build-in form validation uses HTML5 form validation features. JavaScript validation is coded using JavaScript. 6.Title tag, override the customized messages you would create with the JavaScript Constraint Validation API.7.Client-side validation is not enoughits scope of action is very restricted.8.You need form validation as a security measure.crash the website by putting a random value into the form.Make it easy for the user to pit in their data.9.Form validation is important on both client and server-side.form validation is the enforcement of required field-not allowing a form to be submitted until information have been entered. <input type="text"... required>10.Required specifies a form field to be filled in before the form can be submitted.Min-length specifies the minimum of textual data strings.Max-length specifies the maximum of textual data strings.Type is the data needs to be a number, an email address, or some other specific preset type.Pattern specifies a regular expression that defines a pattern the entered data need to follow.Min specifies the minimum values of numerical input types.Max specifies the maximum values of numerical input types.